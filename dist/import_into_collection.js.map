{"version":3,"sources":["../src/import_into_collection.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;sBACc,QAAQ;;;;oBACL,MAAM;;;;;;qBAGR,YAA6F;mEAAP,EAAE;;2BAArF,QAAQ;MAAR,QAAQ,iCAAG,KAAK;MAAE,YAAY,QAAZ,YAAY;MAAE,UAAU,QAAV,UAAU;0BAAE,OAAO;MAAP,OAAO,gCAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;;AAC9F,MAAM,OAAO,GAAG,UAAS,CAAC;;AAE1B,MAAM,iBAAiB,GAAG,SAApB,iBAAiB,CAAG,MAAM;sBAAa,MAAM;GAAE,CAAC;AACtD,SAAO,CAAC,OAAO,CAAC,UAAC,MAAM,EAAK;AAC1B,QAAM,qBAAqB,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC;AACnD,QAAI,CAAC,oBAAE,OAAO,CAAC,qBAAqB,CAAC,EAAE;AACrC,UAAM,gBAAgB,GAAG,uBAAK,qBAAqB,CAAC,CAAC;AACrD,0BAAE,OAAO,CAAC,gBAAgB,EAAE,UAAC,KAAK,EAAE,GAAG,EAAK;AAC1C,YAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;AACrB,iBAAO,CAAC,GAAG,CAAC,GAAG,EAAE,oBAAE,SAAS,CAC1B,oBAAE,GAAG,CAAC,OAAO,EAAE,UAAA,MAAM;mBAAI,iBAAiB,CAAC,MAAM,CAAC;WAAA,CAAC,EACnD,oBAAE,GAAG,CAAC,OAAO,EAAE;mBAAM,IAAI;WAAA,CAAC,CAC3B,CAAC,CAAC;SACJ;AACD,eAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC;OACrD,CAAC,CAAC;KACJ;GACF,CAAC,CAAC;;AAEH,SAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC;;;;;;;AAErD,sCAA2B,OAAO,4GAAE;;;UAAxB,GAAG;UAAE,KAAK;;AACpB,UAAI,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;AAC3B,YAAI,QAAQ,EAAE;AACZ,oBAAU,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;AACxC,iBAAO,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;SAC7B,MAAM;;SAEN;OACF,MAAM;AACL,oBAAU,CAAC,MAAM,YAAG,GAAG,EAAE,GAAG,IAAK,KAAK,EAAG,CAAC;AAC1C,iBAAO,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;SAC9B;KACF;;;;;;;;;;;;;;;CACF","file":"import_into_collection.js","sourcesContent":["\nimport _ from 'lodash';\nimport flat from 'flat';\n\n/* eslint no-shadow: 0*/\nexport default ({ override = false, translations, collection, locales = ['de', 'en', 'it', 'fr'] } = {}) => {\n  const entries = new Map();\n\n  const valueKeyForLocale = locale => `value_${locale}`;\n  locales.forEach((locale) => {\n    const translationsForLocale = translations[locale];\n    if (!_.isEmpty(translationsForLocale)) {\n      const translationsFlat = flat(translationsForLocale);\n      _.forEach(translationsFlat, (value, key) => {\n        if (!entries.has(key)) {\n          entries.set(key, _.zipObject(\n            _.map(locales, locale => valueKeyForLocale(locale)),\n            _.map(locales, () => null),\n          ));\n        }\n        entries.get(key)[valueKeyForLocale(locale)] = value;\n      });\n    }\n  });\n\n  console.log('--- importing i18n into collection --');\n  /* eslint no-restricted-syntax: 0*/\n  for (const [key, value] of entries) {\n    if (collection.findOne(key)) {\n      if (override) {\n        collection.update(key, { $set: value });\n        console.log('updated', key);\n      } else {\n        // console.log('skipped', key);\n      }\n    } else {\n      collection.insert({ _id: key, ...value });\n      console.log('inserted', key);\n    }\n  }\n};\n"]}