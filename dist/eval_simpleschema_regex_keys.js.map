{"version":3,"sources":["../src/eval_simpleschema_regex_keys.js"],"names":[],"mappings":";;;;;;;;qBACwB,yBAAyB;;AAAlC,SAAS,yBAAyB,CAAC,QAAQ,EAAE;AAC1D,MAAI,QAAQ,CAAC,KAAK,EAAE;AAClB,QAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAC9B,UAAC,IAAY;UAAV,GAAG,GAAL,IAAY,CAAV,GAAG;UAAE,GAAG,GAAV,IAAY,CAAL,GAAG;aAAQ;AACjB,WAAG,EAAH,GAAG;AACH,WAAG,EAAE,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,UAAC,CAAC,EAAE,CAAC;iBAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAAC,EAAE,MAAM,CAAC;OACjE;KAAC,CACH,CAAC;AACF,wBAAY,QAAQ,IAAE,KAAK,EAAL,KAAK,IAAG;GAC/B;AACD,SAAO,QAAQ,CAAC;CACjB","file":"eval_simpleschema_regex_keys.js","sourcesContent":["// allowes to use SimpleSchema.RegEx.Email keys in the translation file, instead of the actual regex\nexport default function evalSimpleSchemaRegexKeys(messages) {\n  if (messages.regEx) {\n    const regEx = messages.regEx.map(\n      ({ msg, exp }) => ({\n        msg,\n        exp: exp && exp.split('.').reduce((o, i) => (o && o[i]), global),\n      }),\n    );\n    return { ...messages, regEx };\n  }\n  return messages;\n}\n"]}