{"version":3,"sources":["../src/eval_simpleschema_regex_keys.js"],"names":["evalSimpleSchemaRegexKeys","messages","regEx","map","msg","exp","split","reduce","o","i","global"],"mappings":";;;;;;;;kBACwBA,yB;AADxB;AACe,SAASA,yBAAT,CAAmCC,QAAnC,EAA6C;AAC1D,MAAIA,YAAYA,SAASC,KAAzB,EAAgC;AAC9B,QAAMA,QAAQD,SAASC,KAAT,CAAeC,GAAf,CACZ;AAAA,UAAGC,GAAH,QAAGA,GAAH;AAAA,UAAQC,GAAR,QAAQA,GAAR;AAAA,aAAmB;AACjBD,gBADiB;AAEjBC,aAAKA,OAAOA,IAAIC,KAAJ,CAAU,GAAV,EAAeC,MAAf,CAAsB,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAWD,KAAKA,EAAEC,CAAF,CAAhB;AAAA,SAAtB,EAA6CC,MAA7C;AAFK,OAAnB;AAAA,KADY,CAAd;AAMA,wBAAYT,QAAZ,IAAsBC,YAAtB;AACD;AACD,SAAOD,QAAP;AACD","file":"eval_simpleschema_regex_keys.js","sourcesContent":["// allowes to use SimpleSchema.RegEx.Email keys in the translation file, instead of the actual regex\nexport default function evalSimpleSchemaRegexKeys(messages) {\n  if (messages && messages.regEx) {\n    const regEx = messages.regEx.map(\n      ({ msg, exp }) => ({\n        msg,\n        exp: exp && exp.split('.').reduce((o, i) => (o && o[i]), global),\n      }),\n    );\n    return { ...messages, regEx };\n  }\n  return messages;\n}\n"]}