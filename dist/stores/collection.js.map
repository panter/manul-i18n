{"version":3,"sources":["../../src/stores/collection.js"],"names":[],"mappings":"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","file":"collection.js","sourcesContent":["import _ from 'lodash';\nimport flat, { unflatten } from 'flat';\n\n\nexport default class {\n  constructor({\n    Meteor,\n    ReactiveVar, // only needed on client\n    collection,\n    publicationName = 'translations',\n    } = {}) {\n    this.publicationName = publicationName;\n    this.collection = collection;\n    this.Meteor = Meteor;\n    this.ReactiveVar = ReactiveVar;\n    if (Meteor.isClient) {\n      this.initClient();\n    } else {\n      this.initServer();\n    }\n  }\n\n  initClient() {\n    this.locale = new this.ReactiveVar();\n    this.startSubscription(this.getLocale());\n  }\n\n  startSubscription(locale) {\n    // we keep all old subscription, so no stop or tracker here\n    this.Meteor.subscribe(this.publicationName, locale);\n  }\n\n  initServer() {\n    this.Meteor.publish(this.publicationName, locale =>\n       this.collection.find({}, { fields: { [this.getValueKey(locale)]: true } }),\n    );\n  }\n\n  getLocale() {\n    if (this.Meteor.isServer) {\n      console.trace('getLocale can only be called on the client');\n      throw new this.Meteor.Error('getLocale can only be called on the client, pass _locale to translate if using from server');\n    }\n    return this.locale.get();\n  }\n\n  setLocale(locale) {\n    if (this.Meteor.isServer) {\n      throw new this.Meteor.Error('setLocale can only be called on the client');\n    }\n    this.locale.set(locale);\n    this.startSubscription(locale); // restart\n  }\n  /* eslint class-methods-use-this: 0*/\n  getValueKey(locale) {\n    return `value_${locale}`;\n  }\n\n  translate(keyOrNamespace, options = {}) {\n    const { _locale = this.getLocale(), ...params } = options;\n    // if locale is different (e.g. fallback), subscribe to that locale as well\n    // so that it will be available soon\n    if (this.Meteor.isClient && _locale !== this.getLocale()) {\n      this.startSubscription(_locale);\n    }\n    if (!keyOrNamespace) {\n      return '';\n    }\n\n    const results = this.findResultsForKey(keyOrNamespace);\n\n    const getValue = (entry) => {\n      if (_.has(entry, this.getValueKey(_locale))) {\n        return this._replaceParamsInString(\n            _.get(entry, this.getValueKey(_locale)),\n          params,\n        );\n      }\n      return null;\n    };\n    const object = unflatten(\n         _.chain(results)\n         .sortBy(({ _id }) => _id.length)\n         .keyBy('_id')\n         .mapValues(getValue)\n         .value(),\n       { overwrite: true });\n    const objectOrString = _.get(object, keyOrNamespace);\n    if (!_.isString(objectOrString) && _.isEmpty(objectOrString)) {\n      // empty object or undefined\n      return null;\n    }\n    return objectOrString;\n  }\n\n  has(keyOrNamespace) {\n    return this.collection.findOne(keyOrNamespace);\n  }\n  hasObject(keyOrNamespace) {\n    return this.findResultsForKey(keyOrNamespace).length > 1;\n  }\n\n  findResultsForKey(keyOrNamespace) {\n    const result = this.collection.findOne(keyOrNamespace);\n    if (!result) {\n      // a parent is requested, find all childs that start with keyOrNamespace\n      // this is slow, so we do it only if there is no exact key\n      return this.collection.find({ _id: { $regex: `${keyOrNamespace}/*` } }).fetch();\n    }\n    return [result];\n  }\n\n  _replaceParamsInString(string, paramsUnflatted) {\n    // flat params if not flat\n    const params = flat(paramsUnflatted);\n    const open = '{$';\n    const close = '}';\n    let replacedString = string;\n    Object.keys(params).forEach((param) => {\n      const substitution = _.get(params, param, '');\n      replacedString = replacedString.split(open + param + close).join(substitution);\n    });\n    return replacedString;\n  }\n\n\n}\n"]}