{"version":3,"sources":["../../src/stores/collection.js"],"names":["Meteor","Ground","ReactiveVar","collection","publicationName","isClient","initClient","initServer","isServer","console","trace","Error","locale","get","set","startSubscription","subscriptions","collectionGrounded","Collection","_name","observeSource","find","subscribe","keep","that","publish","publishTranslations","ready","fields","getValueKey","entry","params","_replaceParamsInString","keyOrNamespace","options","_locale","getLocale","entryByKey","_findEntryForKey","_getValue","entries","_findEntriesForNamespace","fullObject","_id","length","overwrite","objectForNamespace","getCollection","findOne","namespace","findResultsForNamespace","$regex","fetch","string","paramsUnflatted","open","close","replacedString","forEach","param","substitution","split","join"],"mappings":"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","file":"collection.js","sourcesContent":["import _ from 'lodash';\nimport { flow, sortBy, keyBy, mapValues } from 'lodash/fp';\n\nimport flat, { unflatten } from 'flat';\n\n\nexport default class {\n  constructor({\n    Meteor,\n    Ground, // optional, enables caching via Ground https://github.com/GroundMeteor/\n    ReactiveVar, // only needed on client\n    collection,\n    publicationName = 'translations',\n    } = {}) {\n    this.Ground = Ground;\n    this.publicationName = publicationName;\n    this.collection = collection;\n    this.Meteor = Meteor;\n    this.ReactiveVar = ReactiveVar;\n\n    if (Meteor.isClient) {\n      this.initClient();\n    } else {\n      this.initServer();\n    }\n  }\n\n  getLocale() {\n    if (this.Meteor.isServer) {\n      console.trace('getLocale can only be called on the client, pass _locale to translate if using from server');\n      throw new this.Meteor.Error('getLocale can only be called on the client');\n    }\n    return this.locale.get();\n  }\n\n  setLocale(locale) {\n    if (this.Meteor.isServer) {\n      throw new this.Meteor.Error('setLocale can only be called on the client');\n    }\n    this.locale.set(locale);\n    this.startSubscription(locale); // restart\n  }\n\n  initClient() {\n    this.locale = new this.ReactiveVar();\n    this.subscriptions = {};\n    if (this.Ground) {\n      this.collectionGrounded = new this.Ground.Collection(`${this.collection._name}-grounded`);\n      this.collectionGrounded.observeSource(this.collection.find());\n    }\n  }\n\n\n  startSubscription(locale) {\n    if (!locale || this.subscriptions[locale]) {\n      return; // do not resubscribe;\n    }\n    // we keep all old subscription, so no stop or tracker here\n    this.subscriptions[locale] = this.Meteor.subscribe(this.publicationName, locale, () => {\n      if (this.collectionGrounded) {\n        // reset and keep only new ones\n        this.collectionGrounded.keep(this.collection.find());\n      }\n    });\n  }\n\n  initServer() {\n    const that = this;\n    this.Meteor.publish(this.publicationName, function publishTranslations(locale) {\n      if (!locale) {\n        this.ready();\n        return null;\n      }\n      return that.collection.find({}, { fields: { [that.getValueKey(locale)]: true } });\n    },\n    );\n  }\n\n\n  /* eslint class-methods-use-this: 0*/\n  getValueKey(locale) {\n    return `value_${locale}`;\n  }\n  _getValue(entry, locale, params) {\n    if (_.has(entry, this.getValueKey(locale))) {\n      return this._replaceParamsInString(\n          _.get(entry, this.getValueKey(locale)),\n        params,\n      );\n    }\n    return null;\n  }\n\n  translate(keyOrNamespace, options = {}) {\n    const { _locale = this.getLocale(), ...params } = options;\n    // if locale is different (e.g. fallback), subscribe to that locale as well\n    // so that it will be available soon\n    if (this.Meteor.isClient && _locale !== this.getLocale()) {\n      this.startSubscription(_locale);\n    }\n    if (!keyOrNamespace) {\n      return '';\n    }\n\n    const entryByKey = this._findEntryForKey(keyOrNamespace);\n    if (entryByKey) {\n      return this._getValue(entryByKey, _locale, params);\n    } else if (this.subscriptions[_locale].ready()) {\n      // try to find for namespace\n      // this is expensive, so we do it only if subscription is ready\n      const entries = this._findEntriesForNamespace(keyOrNamespace);\n      const fullObject = unflatten(\n        flow(\n        sortBy(({ _id }) => _id.length),\n        keyBy('_id'),\n        mapValues(entry => this._getValue(entry, _locale, params)),\n      )(entries), { overwrite: true });\n      const objectForNamespace = _.get(fullObject, keyOrNamespace);\n      if (_.isEmpty(objectForNamespace)) {\n        return null;\n      }\n      return objectForNamespace;\n    }\n    return null;\n  }\n  getCollection() {\n    return this.collectionGrounded || this.collection;\n  }\n  has(keyOrNamespace) {\n    return this.getCollection().findOne(keyOrNamespace);\n  }\n  hasObject(namespace) {\n    return this.findResultsForNamespace(namespace).length > 1;\n  }\n\n\n  /**\n  returns either one or multiple results\n  multiple results means that an namespace was requested\n  **/\n  _findEntryForKey(keyOrNamespace) {\n    return this.getCollection().findOne(keyOrNamespace);\n  }\n\n  _findEntriesForNamespace(namespace) {\n    // console.log('doing expensive fetch', namespace);\n    return this.getCollection().find({ _id: { $regex: `^${namespace}` } }).fetch();\n  }\n\n  _replaceParamsInString(string, paramsUnflatted) {\n    // flat params if not flat\n    const params = flat(paramsUnflatted);\n    const open = '{$';\n    const close = '}';\n    let replacedString = string;\n    Object.keys(params).forEach((param) => {\n      const substitution = _.get(params, param, '');\n      replacedString = replacedString.split(open + param + close).join(substitution);\n    });\n    return replacedString;\n  }\n\n\n}\n"]}