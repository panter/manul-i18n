{"version":3,"sources":["../../src/stores/collection.js"],"names":["Meteor","Ground","collection","publicationName","useMethod","Tracker","subscriptions","Error","isClient","initClient","initServer","collectionGrounded","Collection","_name","observeSource","find","locale","isServer","call","error","translations","usedIds","forEach","_id","translation","getCollection","upsert","$set","push","e","console","log","remove","$nin","nonreactive","subscribe","keep","that","methods","_translations","fields","getValueKey","fetch","publish","publishTranslations","ready","entry","params","fallbackLocale","_replaceParamsInString","keyOrNamespace","startSubscription","entryByKey","_findEntryForKey","_getValue","entries","_findEntriesForNamespace","fullObject","length","overwrite","objectForNamespace","findOne","namespace","findResultsForNamespace","$regex","string","paramsUnflatted","open","close","replacedString","substitution","param","split","join"],"mappings":"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","file":"collection.js","sourcesContent":["import { flow, sortBy, keyBy, mapValues } from 'lodash/fp'\nimport _ from 'lodash'\nimport flat, { unflatten } from 'flat'\n\nexport default class {\n  constructor({\n    Meteor,\n    Ground, // optional, enables caching via Ground https://github.com/GroundMeteor/\n    collection,\n    publicationName = 'translations',\n\n    // set to true if you are experience high loads. Translations will no longer be reactive if true\n    useMethod = false,\n    Tracker\n  } = {}) {\n    this.Ground = Ground\n    this.Tracker = Tracker\n    this.publicationName = publicationName\n    this.collection = collection\n    this.Meteor = Meteor\n\n    this.useMethod = useMethod\n    this.subscriptions = {}\n    if (this.useMethod && !Ground) {\n      throw new Error('please use ground-collection if using method calls')\n    }\n\n    if (Meteor.isClient) {\n      this.initClient()\n    } else {\n      this.initServer()\n    }\n  }\n\n  initClient() {\n    if (this.Ground) {\n      this.collectionGrounded = new this.Ground.Collection(\n        `${this.collection._name}-grounded`\n      )\n      if (!this.useMethod) {\n        this.collectionGrounded.observeSource(this.collection.find())\n      }\n    }\n  }\n\n  startSubscription(locale) {\n    if (this.Meteor.isServer) {\n      return\n    }\n    if (!locale || this.subscriptions[locale]) {\n      return // do not resubscribe;\n    }\n    if (this.useMethod) {\n      this.subscriptions[locale] = true\n      this.Meteor.call('_translations', locale, (error, translations) => {\n        if (!error) {\n          const usedIds = []\n          translations.forEach(({ _id, ...translation }) => {\n            try {\n              this.getCollection().upsert({ _id }, { $set: translation })\n              usedIds.push(_id)\n            } catch (e) {\n              // some upserts might throw error (if id is accidentaly an objectid)\n              console.log(e)\n            }\n          })\n          this.getCollection().remove({ _id: { $nin: usedIds } })\n        }\n      })\n    } else {\n      this.Tracker.nonreactive(() => {\n        // we keep all old subscription, so no stop or tracker here\n        this.subscriptions[locale] = this.Meteor.subscribe(\n          this.publicationName,\n          locale,\n          () => {\n            if (this.collectionGrounded) {\n              // reset and keep only new ones\n              this.collectionGrounded.keep(this.collection.find())\n            }\n          }\n        )\n      })\n    }\n  }\n\n  initServer() {\n    const that = this\n    this.Meteor.methods({\n      _translations(locale) {\n        return that.collection\n          .find({}, { fields: { [that.getValueKey(locale)]: true } })\n          .fetch()\n      }\n    })\n    this.Meteor.publish(this.publicationName, function publishTranslations(\n      locale\n    ) {\n      if (!locale) {\n        this.ready()\n        return null\n      }\n\n      return that.collection.find(\n        {},\n        { fields: { [that.getValueKey(locale)]: true } }\n      )\n    })\n  }\n\n  /* eslint class-methods-use-this: 0*/\n  getValueKey(locale) {\n    return `value_${locale}`\n  }\n  _getValue(entry, locale, params, fallbackLocale) {\n    if (_.has(entry, this.getValueKey(locale))) {\n      return this._replaceParamsInString(\n        _.get(entry, this.getValueKey(locale)),\n        params\n      )\n    }\n    if (_.has(entry, this.getValueKey(fallbackLocale))) {\n      return this._replaceParamsInString(\n        _.get(entry, this.getValueKey(fallbackLocale)),\n        params\n      )\n    }\n    return null\n  }\n\n  translate(locale, keyOrNamespace, params = {}, fallbackLocale) {\n    // if locale is different (e.g. fallback), subscribe to that locale as well\n    // so that it will be available soon\n    if (this.Meteor.isClient) {\n      this.startSubscription(locale)\n      if (fallbackLocale && fallbackLocale !== locale) {\n        this.startSubscription(fallbackLocale)\n      }\n    }\n    if (!keyOrNamespace) {\n      return ''\n    }\n\n    const entryByKey = this._findEntryForKey(keyOrNamespace)\n\n    if (entryByKey) {\n      return this._getValue(entryByKey, locale, params, fallbackLocale)\n    } else if (\n      this.useMethod ||\n      this.Meteor.isServer ||\n      this.Meteor.isClient\n      // || this.subscriptions[locale].ready()\n    ) {\n      // try to find for namespace\n      // this is expensive, so we do it only if subscription is ready\n      const entries = this._findEntriesForNamespace(keyOrNamespace)\n      const fullObject = unflatten(\n        flow(\n          sortBy(({ _id }) => _id.length),\n          keyBy('_id'),\n          mapValues(entry =>\n            this._getValue(entry, locale, params, fallbackLocale)\n          )\n        )(entries),\n        { overwrite: true }\n      )\n      const objectForNamespace = _.get(fullObject, keyOrNamespace)\n      if (_.isEmpty(objectForNamespace)) {\n        return null\n      }\n      return objectForNamespace\n    }\n    return null\n  }\n  getCollection() {\n    return this.collectionGrounded || this.collection\n  }\n  has(keyOrNamespace) {\n    return this.getCollection().findOne(keyOrNamespace)\n  }\n  hasObject(namespace) {\n    return this.findResultsForNamespace(namespace).length > 1\n  }\n\n  /**\n  returns either one or multiple results\n  multiple results means that an namespace was requested\n  **/\n  _findEntryForKey(keyOrNamespace) {\n    return this.getCollection().findOne(keyOrNamespace)\n  }\n\n  _findEntriesForNamespace(namespace) {\n    // console.log('doing expensive fetch', namespace);\n    return this.getCollection()\n      .find({ _id: { $regex: `^${namespace}` } })\n      .fetch()\n  }\n\n  _replaceParamsInString(string, paramsUnflatted) {\n    // flat params if not flat\n    const params = flat(paramsUnflatted)\n    const open = '{$'\n    const close = '}'\n    let replacedString = string\n    if (!replacedString) {\n      return replacedString\n    }\n    Object.keys(params).forEach(param => {\n      const substitution = _.get(params, param, '')\n      replacedString = replacedString\n        .split(open + param + close)\n        .join(substitution)\n    })\n    return replacedString\n  }\n}\n"]}