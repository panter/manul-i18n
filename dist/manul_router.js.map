{"version":3,"sources":["../src/manul_router.js"],"names":[],"mappings":"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","file":"manul_router.js","sourcesContent":["import _ from 'lodash';\n\nimport CreateNavItem from './create_nav_item';\nimport disableFlowRouterClickDetection from\n  './disable_flowrouter_click_detection';\n\n\n/**\n\n  const manulRouter = new ManulRouter(\n    {FlowRouter, Meteor, i18n},\n    {\n      // onRoute will be called when route is changed\n      // it will be called with the navItem and a next-function\n      // route will continue if you either return true or call the next-function\n      // otherwise, route change is canceled.\n      onRoute(navItem:Object, next:Function)\n    }\n  );\n**/\nexport default class {\n  constructor({ FlowRouter, Meteor, i18n }, globals = {}) {\n    this.FlowRouter = FlowRouter;\n    this.i18n = i18n;\n    this.routeConfirmCallback = null;\n    this.globals = globals;\n    this.createNavItem = CreateNavItem(this);\n    disableFlowRouterClickDetection({ FlowRouter, Meteor });\n  }\n\n\n  /**\n  get the current path (non-reactive)\n  **/\n  getCurrentPath() {\n    return this.FlowRouter.current().path;\n  }\n\n  /**\n  get the current route defininition (non-reactive)\n  **/\n  getCurrentRoute() {\n    return this.FlowRouter.current().route;\n  }\n  /**\n  get a url path param by name, tracker-reactive\n  **/\n  getParam(paramName) {\n    return this.FlowRouter.getParam(paramName);\n  }\n\n  /**\n  set a url path param in the current route\n  **/\n  setParams(newParams) {\n    this.FlowRouter.setParams(newParams);\n  }\n\n  /**\n  get queryparams, tracker-reactive\n  **/\n  getQueryParam(queryStringKey) {\n    return this.FlowRouter.getQueryParam(queryStringKey);\n  }\n\n  /**\n    set queryString params, you can pass an object with key:values\n  **/\n  setQueryParam(newQueryParams) {\n    this.FlowRouter.setQueryParam(newQueryParams);\n  }\n\n  /**\n    construct a path by the routeName, params and queryParams.\n    It automatically adds the locale to the route if it is a localeRoute\n  **/\n  getPath(routeName, params, queryParams) {\n    return this.FlowRouter.path(\n      routeName,\n      { locale: this.i18n.getLocale(), ...params },\n      queryParams,\n      // flow router does escape \"/\" in the route-params, but we like to keep them\n      // FIXME: may break cases where / is in a queryParam\n    ).replace(/%252F/g, '/');\n  }\n\n  /**\n  got to the given route. The arguments can be:\n  - routeName, params, queryParams\n  - a path (string)\n  - a navItem (created with createNavItem)\n\n\n  This will trigger route-callbacks (onRoute)\n\n  you can additionally pass a callback as the last param,\n  this will be called after all onRoute-Callbacks has been resolved\n\n\n  **/\n  go(...args) {\n    const nav = this._wrapAsNavItemIfneeded(args);\n    const allOnRoutes = _.flatten([nav.onRoute, this.globals.onRoute]);\n    allOnRoutes.reduce(\n        (promiseChain, onRoute) => promiseChain.then(\n          () => new Promise((next) => {\n            if (_.isFunction(onRoute)) {\n              // onRoute can either return true/ false\n              // or call its second arg (next) with no value or true\n              const should = onRoute(\n                nav,\n                (s = true) => (s && next()),\n              );\n              if (_.isBoolean(should) && should) {\n                next();\n              }\n            } else {\n              next();\n            }\n          }),\n        ), Promise.resolve(),\n      ).then(() => {\n        this.FlowRouter.go(nav.href);\n        // check if last arg is a callback function and execute\n        if (_.isFunction(_.last(args))) {\n          _.last(args)();\n        }\n      });\n  }\n\n\n  redirect(...args) {\n    const nav = this._wrapAsNavItemIfneeded(args);\n    this.FlowRouter.redirect(nav.href);\n  }\n\n  _wrapAsNavItemIfneeded(args) {\n    const firstArg = args[0];\n    if (_.has(firstArg, 'href')) {\n      // is already a nav item\n      return args[0];\n    }\n    return this.createNavItem({\n      routeName: args[0],\n      params: args[1],\n      queryParams: args[2],\n    });\n  }\n}\n"]}