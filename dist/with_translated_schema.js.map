{"version":3,"sources":["../src/with_translated_schema.js"],"names":[],"mappings":";;;;;;;;;;;;sBAAc,QAAQ;;;;0BACa,aAAa;;uCAEd,2BAA2B;;;;;;;;;;;AAQtD,IAAM,QAAQ,GAAG,SAAX,QAAQ,CAAG,sBAAsB;SAAI,UAAC,IAAqB,EAAE,MAAM,EAAK;QAAhC,OAAO,GAAT,IAAqB,CAAnB,OAAO;;QAAK,KAAK,4BAAnB,IAAqB;;mBACvC,OAAO,EAAE;;QAAhC,IAAI,YAAJ,IAAI;QAAE,YAAY,YAAZ,YAAY;;AAC1B,QAAI,CAAC,YAAY,EAAE;AACjB,YAAM,IAAI,KAAK,CAAC,2FAA2F,CAAC,CAAC;KAC9G;AACD,QAAI,OAAO,GAAG,sBAAsB,CAAC;AACrC,QAAI,oBAAE,UAAU,CAAC,sBAAsB,CAAC,EAAE;AACxC,aAAO,GAAG,sBAAsB,YAAG,OAAO,EAAP,OAAO,IAAK,KAAK,EAAG,CAAC;KACzD;AACD,QAAM,eAAe,GAAG,oBAAE,SAAS,CACjC,OAAO,EACP,UAAC,SAAS,EAAE,QAAQ;aAClB,0CAAsB,EAAE,IAAI,EAAJ,IAAI,EAAE,YAAY,EAAZ,YAAY,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,SAAS,CAAC;KAC1E,CACF,CAAC;AACF,UAAM,CAAC,IAAI,eAAO,KAAK,EAAK,eAAe,EAAG,CAAC;GAChD;CAAA,CAAC;;;;qBAEa,UAAA,OAAO;SAAI,oCAAmB,QAAQ,CAAC,OAAO,CAAC,CAAC;CAAA","file":"with_translated_schema.js","sourcesContent":["import _ from 'lodash';\nimport { composeWithTracker } from 'mantra-core';\n\nimport translateSimpleSchema from './translate_simple_schema';\n/**\n  withTranslatedSchema is a composer that translates the given schemas using .\n  Pass a mapping-object where the keys are the properties containing these schemas\n  and the values of the object are the i18n-namespaces\n\n  e.g. withTranslatedSchema({companySchema: \"companies\"})\n*/\nexport const composer = mappingArrayOrFunction => ({ context, ...props }, onData) => {\n  const { i18n, SimpleSchema } = context();\n  if (!SimpleSchema) {\n    throw new Error('If you want to use withTranslatedSchema, you have to provide SimpleSchema in your context');\n  }\n  let mapping = mappingArrayOrFunction;\n  if (_.isFunction(mappingArrayOrFunction)) {\n    mapping = mappingArrayOrFunction({ context, ...props });\n  }\n  const translatedProps = _.mapValues(\n    mapping,\n    (namespace, propName) => (\n      translateSimpleSchema({ i18n, SimpleSchema })(props[propName], namespace)\n    ),\n  );\n  onData(null, { ...props, ...translatedProps });\n};\n\nexport default mapping => composeWithTracker(composer(mapping));\n"]}