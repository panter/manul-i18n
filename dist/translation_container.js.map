{"version":3,"sources":["../src/translation_container.js"],"names":["getTranslationId","children","_id","getTranslation","i18n","doc","disableEditorBypass","params","translationId","tDoc","t","getTranslationProps","context","actions","props","locale","getLocale","translation","isEditMode","gotoEdit","editTranslationAction","composer","onData","depsMapper","Component","_tagType","_props","editorProps","style","cursor","textTransform","onClick","createElement","dangerouslySetInnerHTML","__html","key","displayName","composeWithTrackerServerSave","global","T","stubContext","translationStore","setLocale","translate","supportedLocales","defaultLocale"],"mappings":"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","file":"translation_container.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport { useDeps, composeAll, composeWithTracker, compose } from 'mantra-core';\nimport { setComposerStub } from 'react-komposer';\nimport I18nService from './i18n_service';\n\n/**\n\n                 MR T\n\n                 `sdddh-\n                +MMMMMy\n                -ddddh+\n                           :+\n          +N/             /MN\n          :M.              ms\n           d               s+\n           y`              s/\n           :/     ``      .N:\n            o+-+hmdhhddy-:mM`\n             hMM+     .dMMMy\n             `dMm-:ss.-NMNo\n               +mMNNNmMNo`\n                 .+sys:\n\n      \"The jibba jabba stops here!\"\n\n\n  Mr. T translates your stuff:\n\n  translate single key from the translation store (will render as <span>)\n  <T>home.content.title</T>\n\n  If you can't use react-node, but need a plan string, pass a function as child:\n  <T _id=\"home.content.image.alttext\">{(altText) => <img alt={altText} src=\"...\" />}</T>\n\n  MR. T can also pick properites from objects/documents by path.\n  E.g. this reads the object page.meta.title.<current locale>\n  <T doc={page} >meta.title</T>\n\n  also works with function-children:\n  <T doc={page} _id=\"meta.title\">{(altText) => <img alt={altText} src=\"...\" />}</T>\n\n  If you have simple object with keys as locales, e.g.\n  const myProperty = {\n    de: \"German\",\n    fr: \"French\",\n    it: \"English\"\n  }\n\n  you can also use Mr. T to display the right translation (empty path)\n\n  <T doc={myProperty} />\n\n  Advanced:\n  ---------\n\n  If i18n isEditMode() returns true (reactivly),\n  it will render the key instead of the translation (does not work for doc-paths currently).\n\n  pass property disableEditorBypass to disable this feature on a <T>:\n  <T disableEditorBypass>path.to.key</T>\n\n  if i18n-service provides a editTranslationAction and i18n isEditMode() is true\n  a click on <T> will call this function / mantra-action\n\n  inspired by https://github.com/vazco/meteor-universe-i18n\n  Â© Panter 2016\n\n**/\n\nconst getTranslationId = ({ children, _id }) => (\n  _id || (_.isString(children) ? children : null)\n);\n\nconst getTranslation = (i18n, { doc, _id, disableEditorBypass, children, ...params }) => {\n  const translationId = getTranslationId({ children, _id });\n  if (doc) {\n    return i18n.tDoc(doc, translationId);\n  }\n  return i18n.t(translationId, params, { disableEditorBypass });\n};\n\n/**\nthis function is outside of the composer so that it can be used in stubbing mode more easily\n**/\nconst getTranslationProps = (context, { actions, ...props }) => {\n  const { i18n } = context();\n  const locale = i18n.getLocale();\n  const translationId = getTranslationId(props);\n  const translation = getTranslation(i18n, props);\n\n  let isEditMode = i18n.isEditMode();\n  let gotoEdit = () => {\n    if (_.isFunction(i18n.editTranslationAction)) {\n      // call function\n      i18n.editTranslationAction(translationId);\n    } else if (_.isString(i18n.editTranslationAction)) {\n      // call mantra action\n      _.invoke(actions, i18n.editTranslationAction, translationId);\n    }\n  };\n  if (props.doc) {\n      // no edit mode highlighting for docs yet and no gotoEdit;\n    gotoEdit = _.noop;\n    isEditMode = false;\n  }\n  return { translationId, gotoEdit, translation, locale, isEditMode };\n};\n\n\nexport const composer = ({ context, ...props }, onData) => {\n  onData(null, getTranslationProps(context, props));\n};\nexport const depsMapper = (context, actions) => ({\n  context: () => context,\n  actions,\n});\n\nconst Component = (\n  { isEditMode, gotoEdit, locale, _tagType, _props = {}, translation, children },\n) => {\n  if (_.isFunction(children)) {\n    return children(translation);\n  }\n  const editorProps = {\n    style: {\n      cursor: isEditMode && 'pointer',\n      textTransform: isEditMode && 'none',\n    },\n    onClick: () => (isEditMode && gotoEdit ? gotoEdit() : null),\n  };\n  return React.createElement(_tagType || 'span', {\n    ..._props,\n    ...editorProps,\n    dangerouslySetInnerHTML: {\n      __html: translation,\n    },\n    key: locale,\n  });\n};\n\nComponent.displayName = 'T';\n\nconst composeWithTrackerServerSave = _.get(global, 'Meteor.isServer') ? compose : composeWithTracker;\nconst T = composeAll(\n  composeWithTrackerServerSave(composer),\n  useDeps(depsMapper),\n)(Component);\n\nT.displayName = 'T';\n\nsetComposerStub(T, (props) => {\n  const stubContext = () => ({\n    i18n: new I18nService({\n      translationStore: {\n        setLocale: _.noop,\n        getLocale: () => 'de',\n        translate: key => key,\n      },\n      supportedLocales: ['de'],\n      defaultLocale: 'de',\n    }),\n  });\n  return getTranslationProps(stubContext, props);\n});\n\nexport default T;\n"]}