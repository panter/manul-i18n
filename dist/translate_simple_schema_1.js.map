{"version":3,"sources":["../src/translate_simple_schema_1.js"],"names":["i18n","SimpleSchema","schema","namespace","Error","translations","t","translatedDef","_addSubSchemaTranslations","parentFieldFullName","parentTranslation","objectKeys","forEach","field","fullFieldName","fieldTranslation","fieldDefinition","getDefinition","defaultTransform","value","label","hintText","hintTitle","listAdd","listDel","toggleOptionalLabel","length","uniforms","transform","translatedScheme","simpleSchemaMessages","messages"],"mappings":";;;;;;;;;;;;;;;;;;AACA;;;;;;AAEA;kBACe;AAAA,MAAGA,IAAH,QAAGA,IAAH;AAAA,MAASC,YAAT,QAASA,YAAT;AAAA,SAA4B,UAACC,MAAD,EAASC,SAAT,EAAuB;AAChE,QAAI,CAACF,YAAL,EAAmB;AACjB,YAAM,IAAIG,KAAJ,CAAU,8DAAV,CAAN;AACD;AACD;AACA,QAAMC,eAAeL,KAAKM,CAAL,CAAOH,SAAP,CAArB;AACA,QAAMI,gBAAgB,EAAtB;AACA,QAAMC,4BAA4B,SAA5BA,yBAA4B,GAAwD;AAAA,UAAvDC,mBAAuD,uEAAjC,IAAiC;AAAA,UAA3BC,iBAA2B,uEAAP,EAAO;;AACxFR,aAAOS,UAAP,CAAkBF,mBAAlB,EAAuCG,OAAvC,CAA+C,UAACC,KAAD,EAAW;AACxD,YAAMC,gBAAgBL,sBAAyBA,mBAAzB,SAAgDI,KAAhD,GAA0DA,KAAhF;AACA,YAAME,mBAAmB,mBAAML,iBAAN,EAAyBG,KAAzB,CAAzB;AACA,YAAMG,kBAAkBd,OAAOe,aAAP,CAAqBH,aAArB,CAAxB;AACA,YAAMI,mBAAmB,SAAnBA,gBAAmB;AAAA,iBAAUH,oBAAoBA,iBAAiBI,KAAjB,CAArB,IAAiDA,KAA1D;AAAA,SAAzB;AACA,YAAIC,QAAQ,IAAZ;AACA,YAAIC,WAAW,IAAf;AACA,YAAIC,YAAY,IAAhB;AACA,YAAIC,UAAU,IAAd;AACA,YAAIC,UAAU,IAAd;AACA,YAAIC,sBAAsB,IAA1B;AACA,YAAIV,gBAAJ,EAAsB;AACpB,cAAI,wBAAWA,gBAAX,CAAJ,EAAkC;AAChCK,oBAAQL,gBAAR;AACD,WAFD,MAEO;AACLK,oBAAQL,iBAAiBK,KAAzB;AACAC,uBAAWN,iBAAiBM,QAA5B;AACAC,wBAAYP,iBAAiBO,SAA7B;AACAG,kCAAsBV,iBAAiBU,mBAAvC;AACAF,sBAAUR,iBAAiBQ,OAA3B;AACAC,sBAAUT,iBAAiBS,OAA3B;AACD;AACF;AACD;AACA,YAAItB,OAAOS,UAAP,CAAkBG,aAAlB,EAAiCY,MAAjC,GAA0C,CAA9C,EAAiD;AAC/ClB,oCAA0BM,aAA1B,EAAyCC,gBAAzC;AACD;AACDR,sBAAcO,aAAd,IAA+B;AAC7BM,iBAAOA,SAAYjB,SAAZ,SAAyBW,aADH;AAE7Ba;AACEC,uBAAWV,gBADb;AAEEG,8BAFF;AAGEC,gCAHF;AAIEC,4BAJF;AAKEC,4BALF;AAMEC;AANF,aAOKT,gBAAgBW,QAPrB;AAF6B,SAA/B;AAYD,OAvCD;AAwCD,KAzCD;;AA2CAnB,8BAA0B,IAA1B,EAAgCH,YAAhC;AACA,QAAMwB,mBAAmB,IAAI5B,YAAJ,CAAiB,CAACC,MAAD,EAASK,aAAT,CAAjB,CAAzB;AACA,QAAMuB,uBAAuB,4CAC3B9B,KAAKM,CAAL,CAAO,cAAP,CAD2B,CAA7B;AAGAuB,qBAAiBE,QAAjB,CAA0BD,oBAA1B;;AAEA,WAAOD,gBAAP;AACD,GA1Dc;AAAA,C","file":"translate_simple_schema_1.js","sourcesContent":["import _ from 'lodash';\nimport evalSimpleSchemaRegexKeys from './eval_simpleschema_regex_keys';\n\n/** legacy version for simpleschema 1 **/\nexport default ({ i18n, SimpleSchema }) => (schema, namespace) => {\n  if (!SimpleSchema) {\n    throw new Error('please provide SimpleSchema if you want to translate schemas');\n  }\n  // translate all the labels\n  const translations = i18n.t(namespace);\n  const translatedDef = {};\n  const _addSubSchemaTranslations = (parentFieldFullName = null, parentTranslation = {}) => {\n    schema.objectKeys(parentFieldFullName).forEach((field) => {\n      const fullFieldName = parentFieldFullName ? `${parentFieldFullName}.${field}` : field;\n      const fieldTranslation = _.get(parentTranslation, field);\n      const fieldDefinition = schema.getDefinition(fullFieldName);\n      const defaultTransform = value => (fieldTranslation && fieldTranslation[value]) || value;\n      let label = null;\n      let hintText = null;\n      let hintTitle = null;\n      let listAdd = null;\n      let listDel = null;\n      let toggleOptionalLabel = null;\n      if (fieldTranslation) {\n        if (_.isString(fieldTranslation)) {\n          label = fieldTranslation;\n        } else {\n          label = fieldTranslation.label;\n          hintText = fieldTranslation.hintText;\n          hintTitle = fieldTranslation.hintTitle;\n          toggleOptionalLabel = fieldTranslation.toggleOptionalLabel;\n          listAdd = fieldTranslation.listAdd;\n          listDel = fieldTranslation.listDel;\n        }\n      }\n      // recursivly add subfields as well, but flat\n      if (schema.objectKeys(fullFieldName).length > 0) {\n        _addSubSchemaTranslations(fullFieldName, fieldTranslation);\n      }\n      translatedDef[fullFieldName] = {\n        label: label || `${namespace}.${fullFieldName}`,\n        uniforms: {\n          transform: defaultTransform,\n          hintText,\n          hintTitle,\n          listAdd,\n          listDel,\n          toggleOptionalLabel,\n          ...fieldDefinition.uniforms, // can override default transform\n        },\n      };\n    });\n  };\n\n  _addSubSchemaTranslations(null, translations);\n  const translatedScheme = new SimpleSchema([schema, translatedDef]);\n  const simpleSchemaMessages = evalSimpleSchemaRegexKeys(\n    i18n.t('simpleSchema'),\n  );\n  translatedScheme.messages(simpleSchemaMessages);\n\n  return translatedScheme;\n};\n"]}