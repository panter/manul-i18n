{"version":3,"sources":["../src/translate_simple_schema_1.js"],"names":[],"mappings":";;;;;;;;;;sBAAc,QAAQ;;;;4CACgB,gCAAgC;;;;;;qBAGvD,UAAC,IAAsB;MAApB,IAAI,GAAN,IAAsB,CAApB,IAAI;MAAE,YAAY,GAApB,IAAsB,CAAd,YAAY;SAAO,UAAC,MAAM,EAAE,SAAS,EAAK;AAChE,QAAI,CAAC,YAAY,EAAE;AACjB,YAAM,IAAI,KAAK,CAAC,8DAA8D,CAAC,CAAC;KACjF;;AAED,QAAM,YAAY,GAAG,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;AACvC,QAAM,aAAa,GAAG,EAAE,CAAC;AACzB,QAAM,yBAAyB,GAAG,SAA5B,yBAAyB,GAA2D;UAAvD,mBAAmB,yDAAG,IAAI;UAAE,iBAAiB,yDAAG,EAAE;;AACnF,YAAM,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC,OAAO,CAAC,UAAC,KAAK,EAAK;AACxD,YAAM,aAAa,GAAG,mBAAmB,GAAM,mBAAmB,SAAI,KAAK,GAAK,KAAK,CAAC;AACtF,YAAM,gBAAgB,GAAG,oBAAE,GAAG,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;AACzD,YAAM,eAAe,GAAG,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;AAC5D,YAAM,gBAAgB,GAAG,SAAnB,gBAAgB,CAAG,KAAK;iBAAI,AAAC,gBAAgB,IAAI,gBAAgB,CAAC,KAAK,CAAC,IAAK,KAAK;SAAA,CAAC;AACzF,YAAI,KAAK,GAAG,IAAI,CAAC;AACjB,YAAI,QAAQ,GAAG,IAAI,CAAC;AACpB,YAAI,SAAS,GAAG,IAAI,CAAC;AACrB,YAAI,OAAO,GAAG,IAAI,CAAC;AACnB,YAAI,OAAO,GAAG,IAAI,CAAC;AACnB,YAAI,mBAAmB,GAAG,IAAI,CAAC;AAC/B,YAAI,gBAAgB,EAAE;AACpB,cAAI,oBAAE,QAAQ,CAAC,gBAAgB,CAAC,EAAE;AAChC,iBAAK,GAAG,gBAAgB,CAAC;WAC1B,MAAM;AACL,iBAAK,GAAG,gBAAgB,CAAC,KAAK,CAAC;AAC/B,oBAAQ,GAAG,gBAAgB,CAAC,QAAQ,CAAC;AACrC,qBAAS,GAAG,gBAAgB,CAAC,SAAS,CAAC;AACvC,+BAAmB,GAAG,gBAAgB,CAAC,mBAAmB,CAAC;AAC3D,mBAAO,GAAG,gBAAgB,CAAC,OAAO,CAAC;AACnC,mBAAO,GAAG,gBAAgB,CAAC,OAAO,CAAC;WACpC;SACF;;AAED,YAAI,MAAM,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;AAC/C,mCAAyB,CAAC,aAAa,EAAE,gBAAgB,CAAC,CAAC;SAC5D;AACD,qBAAa,CAAC,aAAa,CAAC,GAAG;AAC7B,eAAK,EAAE,KAAK,IAAO,SAAS,SAAI,aAAa,AAAE;AAC/C,kBAAQ;AACN,qBAAS,EAAE,gBAAgB;AAC3B,oBAAQ,EAAR,QAAQ;AACR,qBAAS,EAAT,SAAS;AACT,mBAAO,EAAP,OAAO;AACP,mBAAO,EAAP,OAAO;AACP,+BAAmB,EAAnB,mBAAmB;aAChB,eAAe,CAAC,QAAQ,CAC5B;SACF,CAAC;OACH,CAAC,CAAC;KACJ,CAAC;;;AAEF,6BAAyB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;AAC9C,QAAM,gBAAgB,GAAG,IAAI,YAAY,CAAC,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC,CAAC;AACnE,QAAM,oBAAoB,GAAG,+CAC3B,IAAI,CAAC,CAAC,CAAC,cAAc,CAAC,CACvB,CAAC;AACF,oBAAgB,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC;;AAEhD,WAAO,gBAAgB,CAAC;GACzB;CAAA","file":"translate_simple_schema_1.js","sourcesContent":["import _ from 'lodash';\nimport evalSimpleSchemaRegexKeys from './eval_simpleschema_regex_keys';\n\n/** legacy version for simpleschema 1 **/\nexport default ({ i18n, SimpleSchema }) => (schema, namespace) => {\n  if (!SimpleSchema) {\n    throw new Error('please provide SimpleSchema if you want to translate schemas');\n  }\n  // translate all the labels\n  const translations = i18n.t(namespace);\n  const translatedDef = {};\n  const _addSubSchemaTranslations = (parentFieldFullName = null, parentTranslation = {}) => {\n    schema.objectKeys(parentFieldFullName).forEach((field) => {\n      const fullFieldName = parentFieldFullName ? `${parentFieldFullName}.${field}` : field;\n      const fieldTranslation = _.get(parentTranslation, field);\n      const fieldDefinition = schema.getDefinition(fullFieldName);\n      const defaultTransform = value => (fieldTranslation && fieldTranslation[value]) || value;\n      let label = null;\n      let hintText = null;\n      let hintTitle = null;\n      let listAdd = null;\n      let listDel = null;\n      let toggleOptionalLabel = null;\n      if (fieldTranslation) {\n        if (_.isString(fieldTranslation)) {\n          label = fieldTranslation;\n        } else {\n          label = fieldTranslation.label;\n          hintText = fieldTranslation.hintText;\n          hintTitle = fieldTranslation.hintTitle;\n          toggleOptionalLabel = fieldTranslation.toggleOptionalLabel;\n          listAdd = fieldTranslation.listAdd;\n          listDel = fieldTranslation.listDel;\n        }\n      }\n      // recursivly add subfields as well, but flat\n      if (schema.objectKeys(fullFieldName).length > 0) {\n        _addSubSchemaTranslations(fullFieldName, fieldTranslation);\n      }\n      translatedDef[fullFieldName] = {\n        label: label || `${namespace}.${fullFieldName}`,\n        uniforms: {\n          transform: defaultTransform,\n          hintText,\n          hintTitle,\n          listAdd,\n          listDel,\n          toggleOptionalLabel,\n          ...fieldDefinition.uniforms, // can override default transform\n        },\n      };\n    });\n  };\n\n  _addSubSchemaTranslations(null, translations);\n  const translatedScheme = new SimpleSchema([schema, translatedDef]);\n  const simpleSchemaMessages = evalSimpleSchemaRegexKeys(\n    i18n.t('simpleSchema'),\n  );\n  translatedScheme.messages(simpleSchemaMessages);\n\n  return translatedScheme;\n};\n"]}